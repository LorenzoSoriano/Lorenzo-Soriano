using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public static class Structure // serve per creare e memorizzare le strututre del gioco
{

    public static Queue<VoxelMod> MakeTree(Vector3 position, int minTrunkHeight, int maxTrunkHeight)
    {

        Queue<VoxelMod> queue = new Queue<VoxelMod>();

        int height = (int)(maxTrunkHeight * NoiseGeneretor.Get2DPerlin(new Vector2(position.x, position.z), 250f, 3f));

        if (height < minTrunkHeight)
            height = minTrunkHeight;

        for (int i = 1; i < height; i++)// crea il tronco del albero
            queue.Enqueue(new VoxelMod(new Vector3(position.x, position.y + i, position.z), 6));

        for (int x = 0; x < 5; x++)
        {

            for (int y = 0; y < 5; y++)
            {

                for (int z = 0; z < 5; z++)
                {

                    if (SmallTreeLayer.TreeLayer1[x, z] == 2 && y < 3)
                        queue.Enqueue(new VoxelMod(new Vector3(position.x, position.y + height, position.z), 6));

                    else if (SmallTreeLayer.TreeLayer1[x, z] == 1 && y < 3)
                        queue.Enqueue(new VoxelMod(new Vector3(position.x + x - 2, position.y + height - 2 + y, position.z + z - 2), 11));

                    else if (SmallTreeLayer.TreeLayer2[x, z] == 1 && y < 4)
                        queue.Enqueue(new VoxelMod(new Vector3(position.x + x - 2, position.y + height - 2 + y, position.z + z - 2), 11));

                    else if (SmallTreeLayer.TreeLayer3[x, z] == 1 && y < 5)
                        queue.Enqueue(new VoxelMod(new Vector3(position.x + x - 2, position.y + height - 2 + y, position.z + z - 2), 11));

                }

            }

        }

        return queue;

    }
  
}
public static class SmallTreeLayer
{

    public static readonly int[,] TreeLayer1 = new int[5,5] 
    {

        {0, 1, 1, 1, 0},
        {1, 1, 1, 1, 1},
        {1, 1, 2, 1 ,1},
        {1, 1, 1, 1, 1},
        {0, 1, 1, 1, 0},

    }; 

    public static readonly int[,] TreeLayer2 = new int[5, 5]
    {

            {0, 0, 0, 0, 0},
            {0, 1, 1, 1, 0},
            {0, 1, 1, 1 ,0},
            {0, 1, 1, 1, 0},
            {0, 0, 0, 0, 0},

    };

    public static readonly int[,] TreeLayer3 = new int[5, 5] 
    {

            {0, 0, 0, 0, 0},
            {0, 0, 1, 0, 0},
            {0, 1, 1, 1 ,0},
            {0, 0, 1, 0, 0},
            {0, 0, 0, 0, 0},

    }; 

}
